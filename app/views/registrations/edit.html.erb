<script>
  $( document ).ready(function() {
    let hashed_email = <%=@registration.hashed_email.to_json.html_safe %>;
    let encrypted_data = localStorage.getItem(hashed_email);
    //local-storage for this registration not present
    if (!!encrypted_data == false){
      function getValue() {
        var retVal = prompt(<%= I18n.t("views.edit.browser_deleted_js_prompt").to_json.html_safe %>);
        if (retVal != <%= I18n.t("views.edit.browser_deleted_js_prompt_answer").to_json.html_safe %>) {
           getValue();
        }
      }
      getValue()
      $("[type='text']").attr("placeholder", "as before");
      $('*[name="registration[email]"]').text("[as before]");
      $("#memory_loss").val("before last time")
      }
    //localstrorage-memory present
    else {
      let local_registration = {};
      local_registration[hashed_email] = JSON.parse(encrypted_data);
      $.ajax({
        url: '/decrypt',
        type: 'POST',
        headers: {
        'X-CSRF-Token': '<%= form_authenticity_token.to_s %>'
        },
        data: {"encrypted_registrations": local_registration},
        dataType:'json',
        success: function (data, textStatus, jqXHR) {
          let hashed_email = data[0][0];
          let registration = data[0][1];
          //If memory loss of localstorgae was last time, give an alert, make background-placeholder "as before" for fields
          if (registration.memory_loss == "last time"){
            localStorage.removeItem(hashed_email);
            alert(<%= I18n.t("views.edit.updated_in_other_browser_js_alert").to_json.html_safe %>, 'Explanation');
            $("[type='text']").attr("placeholder", "as before");
            $('*[name="registration[email]"]').text("[as before]");
            $("#memory_loss").val("before last time") //update localstorage about memory-loss information via hidden formfields, if submitted
          }
          //No memory-loss or memory loss before last time.
          else {
            //If memory loss of localstorage was before last time, make background-placeholder "as before" for inputs which don't have updated information
            if (registration.memory_loss == "before last time") {
              $("[type='text']").attr("placeholder", "as before");
              $('*[name="registration[email]"]').text("[as before]");
              $("#memory_loss").val("before last time")
              }
            //fill form with localstorage-memory
            $("[name='registration[name]']").val(registration.name);
            $("[name='registration[shortname]']").val(registration.shortname);
            $("[name='registration[phonenumber]']").val(registration.phonenumber);
            if (registration.email){
              $('*[name="registration[email]"]').text(registration.email);
            }
            $("[name='registration[is_friend]']").val(registration.is_friend);
            $("[name='registration[is_palapa]']").val(registration.is_palapa);
            $("[name='registration[is_construction]']").val(registration.is_construction);
            $("[name='registration[is_breakdown]']").val(registration.is_breakdown);
            $("[name='registration[did_work]']").val(registration.did_work);
            $("[name='registration[did_orga]']").val(registration.did_orga);
            $("[name='registration[wants_orga]']").val(registration.wants_orga);
            $("[name='registration[german]']").val(registration.german);
            $("[name='registration[english]']").val(registration.english);
            $("[name='registration[french]']").val(registration.french);
            $("[name='registration[comment]']").val(registration.comment);
            $("[name='registration[start]']").val(registration.start);
            $("[name='registration[end]']").val(registration.end);
            //submit email from localstorage as hidden form-input
            $('*[name="registration[email]"]').val(registration.email);
          }
        }
      });
    }
  });
</script>

<h1><%= t("views.edit.headline")%></h1>
<p style="overflow-wrap: break-word;"><strong><%= t("activerecord.attributes.registration.hashid") %>:</strong> <%= @registration.hashed_email %></p>
<p><%=t("views.edit.above_form")%></p>
<%= form_for(@registration, url: "/registrations/#{@registration.hashed_email}", method: :put, html: {class: 'form-horizontal', autocomplete: "off"}) do |f| %>
  <%= render 'form', :f => f %>
<% end %>
